graph = {
'A' : ['B','C'],
'B' : ['D', 'E'],
'C' : ['F'],
'D' : [],
'E' : ['G'],
'F' : [],
'G' : []
}

start='A'
goal='F'
visited = [] # List to keep track of visited nodes.
stack = [] #Initialize a stack

def dfs(graph,start,goal,queue,visited):
    visited.append(start)
    stack.append(start)

    while stack:
        element = stack.pop()
        print (element, end = " ")
        if(element==goal):
           break
        for neighbour in reversed(graph[element]):
            if neighbour not in visited:
                visited.append(neighbour)
                stack.append(neighbour)
dfs(graph,start,goal,stack,visited)